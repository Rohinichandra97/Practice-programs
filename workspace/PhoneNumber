import java.util.*;
import java.util.stream.Collectors;

class PhoneNumber {
    Map<Integer, List<Character>> map = new HashMap<>();
    List<StringBuilder> words = new ArrayList();
    public List<String> letterCombinations(String digits) {
        if(digits.length() ==0){
            return  new ArrayList();
        }
        map.put(2, Arrays.asList('a','b','c'));
        map.put(3, Arrays.asList('d','e','f'));
        map.put(4, Arrays.asList('g','h','i'));
        map.put(5, Arrays.asList('j','k','l'));
        map.put(6, Arrays.asList('m','n','o'));
        map.put(7, Arrays.asList('p','q','r','s'));
        map.put(8, Arrays.asList('t','u','v'));
        map.put(9, Arrays.asList('w','x','y','z'));
        recMethod(digits, new StringBuilder());
        return words.stream().map(StringBuilder::toString).collect(Collectors.toList());
    }

    private void recMethod(String digits, StringBuilder tillNow){
        if (digits.equals("")){
            words.add(tillNow);
            return;
        }
        Integer currInt = Character.getNumericValue(digits.charAt(0));
         List<Character> charList =  map.get(currInt);
        String newDigits = digits.substring(1);
        for(Character c : charList){
            StringBuilder cuur = new StringBuilder(tillNow);
            recMethod(newDigits, cuur.append(c));
        }
    }
}
